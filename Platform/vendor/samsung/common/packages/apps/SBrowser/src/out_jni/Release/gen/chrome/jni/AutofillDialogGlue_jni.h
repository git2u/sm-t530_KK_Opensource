// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/AutofillDialogGlue

#ifndef org_chromium_chrome_browser_autofill_AutofillDialogGlue_JNI
#define org_chromium_chrome_browser_autofill_AutofillDialogGlue_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kAutofillDialogGlueClassPath[] =
    "org/chromium/chrome/browser/autofill/AutofillDialogGlue";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_AutofillDialogGlue_clazz = NULL;
}  // namespace

namespace autofill {

// Step 2: method stubs.
static void ItemSelected(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section,
    jint index) {
  DCHECK(nativeAutofillDialogViewAndroid) << "ItemSelected";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->ItemSelected(env, obj, section, index);
}

static void AccountSelected(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint index) {
  DCHECK(nativeAutofillDialogViewAndroid) << "AccountSelected";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->AccountSelected(env, obj, index);
}

static void NotificationCheckboxStateChanged(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint type,
    jboolean checked) {
  DCHECK(nativeAutofillDialogViewAndroid) << "NotificationCheckboxStateChanged";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->NotificationCheckboxStateChanged(env, obj, type, checked);
}

static void ContinueAutomaticSignin(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jstring accountName,
    jstring sid,
    jstring lsid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "ContinueAutomaticSignin";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->ContinueAutomaticSignin(env, obj, accountName, sid, lsid);
}

static void EditingStart(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section) {
  DCHECK(nativeAutofillDialogViewAndroid) << "EditingStart";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->EditingStart(env, obj, section);
}

static jboolean EditingComplete(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section) {
  DCHECK(nativeAutofillDialogViewAndroid) << "EditingComplete";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->EditingComplete(env, obj, section);
}

static void EditingCancel(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section) {
  DCHECK(nativeAutofillDialogViewAndroid) << "EditingCancel";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->EditingCancel(env, obj, section);
}

static void EditedOrActivatedField(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint dialogInputPointer,
    jint viewAndroid,
    jstring value,
    jboolean wasEdit) {
  DCHECK(nativeAutofillDialogViewAndroid) << "EditedOrActivatedField";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->EditedOrActivatedField(env, obj, dialogInputPointer,
      viewAndroid, value, wasEdit);
}

static jstring ValidateField(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint fieldType,
    jstring value) {
  DCHECK(nativeAutofillDialogViewAndroid) << "ValidateField";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->ValidateField(env, obj, fieldType, value).Release();
}

static void ValidateSection(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section) {
  DCHECK(nativeAutofillDialogViewAndroid) << "ValidateSection";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->ValidateSection(env, obj, section);
}

static void DialogSubmit(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "DialogSubmit";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->DialogSubmit(env, obj);
}

static void DialogCancel(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "DialogCancel";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->DialogCancel(env, obj);
}

static void DialogDismissed(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "DialogDismissed";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->DialogDismissed(env, obj);
}

static jstring GetLabelForSection(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetLabelForSection";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetLabelForSection(env, obj, section).Release();
}

static jobjectArray GetListForField(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint field) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetListForField";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetListForField(env, obj, field).Release();
}

static jobject GetIconForField(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint fieldType,
    jstring input) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetIconForField";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetIconForField(env, obj, fieldType, input).Release();
}

static jstring GetPlaceholderForField(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section,
    jint fieldType) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetPlaceholderForField";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetPlaceholderForField(env, obj, section, fieldType).Release();
}

static jstring GetDialogButtonText(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint dialogButtonId) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetDialogButtonText";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetDialogButtonText(env, obj, dialogButtonId).Release();
}

static jboolean IsDialogButtonEnabled(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint dialogButtonId) {
  DCHECK(nativeAutofillDialogViewAndroid) << "IsDialogButtonEnabled";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->IsDialogButtonEnabled(env, obj, dialogButtonId);
}

static jstring GetSaveLocallyText(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetSaveLocallyText";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetSaveLocallyText(env, obj).Release();
}

static jstring GetLegalDocumentsText(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetLegalDocumentsText";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetLegalDocumentsText(env, obj).Release();
}

static jstring GetProgressBarText(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid) {
  DCHECK(nativeAutofillDialogViewAndroid) << "GetProgressBarText";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->GetProgressBarText(env, obj).Release();
}

static jboolean IsTheAddItem(JNIEnv* env, jobject obj,
    jint nativeAutofillDialogViewAndroid,
    jint section,
    jint index) {
  DCHECK(nativeAutofillDialogViewAndroid) << "IsTheAddItem";
  AutofillDialogViewAndroid* native =
      reinterpret_cast<AutofillDialogViewAndroid*>(nativeAutofillDialogViewAndroid);
  return native->IsTheAddItem(env, obj, section, index);
}

static base::subtle::AtomicWord g_AutofillDialogGlue_create = 0;
static ScopedJavaLocalRef<jobject> Java_AutofillDialogGlue_create(JNIEnv* env,
    jint nativeAutofillDialogViewAndroid,
    jobject windowAndroid) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "create",

"("
"I"
"Lorg/chromium/ui/WindowAndroid;"
")"
"Lorg/chromium/chrome/browser/autofill/AutofillDialogGlue;",
      &g_AutofillDialogGlue_create);

  jobject ret =
    env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, nativeAutofillDialogViewAndroid, windowAndroid);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AutofillDialogGlue_onDestroy = 0;
static void Java_AutofillDialogGlue_onDestroy(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "onDestroy",

"("
")"
"V",
      &g_AutofillDialogGlue_onDestroy);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_dismissDialog = 0;
static void Java_AutofillDialogGlue_dismissDialog(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "dismissDialog",

"("
")"
"V",
      &g_AutofillDialogGlue_dismissDialog);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateNotificationArea = 0;
static void Java_AutofillDialogGlue_updateNotificationArea(JNIEnv* env, jobject
    obj, jobjectArray notifications) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateNotificationArea",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogNotification;"
")"
"V",
      &g_AutofillDialogGlue_updateNotificationArea);

  env->CallVoidMethod(obj,
      method_id, notifications);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateSection = 0;
static void Java_AutofillDialogGlue_updateSection(JNIEnv* env, jobject obj, jint
    section,
    jboolean visible,
    jobjectArray dialogInputs,
    jobjectArray menuItems,
    jint selectedMenuItem,
    jboolean clobberInputs,
    jint fieldTypeToAlwaysClobber) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateSection",

"("
"I"
"Z"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogField;"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogMenuItem;"
"I"
"Z"
"I"
")"
"V",
      &g_AutofillDialogGlue_updateSection);

  env->CallVoidMethod(obj,
      method_id, section, visible, dialogInputs, menuItems, selectedMenuItem,
          clobberInputs, fieldTypeToAlwaysClobber);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateSectionErrors = 0;
static void Java_AutofillDialogGlue_updateSectionErrors(JNIEnv* env, jobject
    obj, jint section,
    jobjectArray errors) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateSectionErrors",

"("
"I"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogFieldError;"
")"
"V",
      &g_AutofillDialogGlue_updateSectionErrors);

  env->CallVoidMethod(obj,
      method_id, section, errors);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_modelChanged = 0;
static void Java_AutofillDialogGlue_modelChanged(JNIEnv* env, jobject obj,
    jboolean fetchingIsActive) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "modelChanged",

"("
"Z"
")"
"V",
      &g_AutofillDialogGlue_modelChanged);

  env->CallVoidMethod(obj,
      method_id, fetchingIsActive);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateAccountChooser = 0;
static void Java_AutofillDialogGlue_updateAccountChooser(JNIEnv* env, jobject
    obj, jobjectArray accountNames,
    jint selectedAccountIndex) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateAccountChooser",

"("
"[Ljava/lang/String;"
"I"
")"
"V",
      &g_AutofillDialogGlue_updateAccountChooser);

  env->CallVoidMethod(obj,
      method_id, accountNames, selectedAccountIndex);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_getSection = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_getSection(JNIEnv* env, jobject obj, jint section) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "getSection",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogField;",
      &g_AutofillDialogGlue_getSection);

  jobjectArray ret =
    static_cast<jobjectArray>(env->CallObjectMethod(obj,
      method_id, section));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord g_AutofillDialogGlue_getCvc = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillDialogGlue_getCvc(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "getCvc",

"("
")"
"Ljava/lang/String;",
      &g_AutofillDialogGlue_getCvc);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillDialogGlue_shouldSaveDetailsLocally =
    0;
static jboolean Java_AutofillDialogGlue_shouldSaveDetailsLocally(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "shouldSaveDetailsLocally",

"("
")"
"Z",
      &g_AutofillDialogGlue_shouldSaveDetailsLocally);

  jboolean ret =
    env->CallBooleanMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateProgressBar = 0;
static void Java_AutofillDialogGlue_updateProgressBar(JNIEnv* env, jobject obj,
    jdouble value) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateProgressBar",

"("
"D"
")"
"V",
      &g_AutofillDialogGlue_updateProgressBar);

  env->CallVoidMethod(obj,
      method_id, value);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_startAutomaticSignIn = 0;
static void Java_AutofillDialogGlue_startAutomaticSignIn(JNIEnv* env, jobject
    obj, jstring accountName) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "startAutomaticSignIn",

"("
"Ljava/lang/String;"
")"
"V",
      &g_AutofillDialogGlue_startAutomaticSignIn);

  env->CallVoidMethod(obj,
      method_id, accountName);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_getUserAccountNames = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_getUserAccountNames(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "getUserAccountNames",

"("
")"
"[Ljava/lang/String;",
      &g_AutofillDialogGlue_getUserAccountNames);

  jobjectArray ret =
    static_cast<jobjectArray>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord g_AutofillDialogGlue_updateSaveLocallyCheckBox =
    0;
static void Java_AutofillDialogGlue_updateSaveLocallyCheckBox(JNIEnv* env,
    jobject obj, jboolean shouldShow) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillDialogGlue_clazz,
      "updateSaveLocallyCheckBox",

"("
"Z"
")"
"V",
      &g_AutofillDialogGlue_updateSaveLocallyCheckBox);

  env->CallVoidMethod(obj,
      method_id, shouldShow);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_createAutofillDialogFieldArray = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_createAutofillDialogFieldArray(JNIEnv* env, jint
    size) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "createAutofillDialogFieldArray",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogField;",
      &g_AutofillDialogGlue_createAutofillDialogFieldArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, size));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_addToAutofillDialogFieldArray = 0;
static void Java_AutofillDialogGlue_addToAutofillDialogFieldArray(JNIEnv* env,
    jobjectArray array,
    jint index,
    jint nativePointer,
    jint fieldType,
    jstring placeholder,
    jstring value) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "addToAutofillDialogFieldArray",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogField;"
"I"
"I"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_AutofillDialogGlue_addToAutofillDialogFieldArray);

  env->CallStaticVoidMethod(g_AutofillDialogGlue_clazz,
      method_id, array, index, nativePointer, fieldType, placeholder, value);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillDialogGlue_getFieldNativePointer = 0;
static jint Java_AutofillDialogGlue_getFieldNativePointer(JNIEnv* env, jobject
    field) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "getFieldNativePointer",

"("
"Lorg/chromium/chrome/browser/autofill/AutofillDialogField;"
")"
"I",
      &g_AutofillDialogGlue_getFieldNativePointer);

  jint ret =
    env->CallStaticIntMethod(g_AutofillDialogGlue_clazz,
      method_id, field);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_AutofillDialogGlue_getFieldValue = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillDialogGlue_getFieldValue(JNIEnv*
    env, jobject field) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "getFieldValue",

"("
"Lorg/chromium/chrome/browser/autofill/AutofillDialogField;"
")"
"Ljava/lang/String;",
      &g_AutofillDialogGlue_getFieldValue);

  jstring ret =
    static_cast<jstring>(env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, field));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_createAutofillDialogFieldError = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_createAutofillDialogFieldError(JNIEnv* env, jint
    size) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "createAutofillDialogFieldError",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogFieldError;",
      &g_AutofillDialogGlue_createAutofillDialogFieldError);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, size));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_addToAutofillDialogFieldErrorArray = 0;
static void Java_AutofillDialogGlue_addToAutofillDialogFieldErrorArray(JNIEnv*
    env, jobjectArray array,
    jint index,
    jint fieldType,
    jstring errorText) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "addToAutofillDialogFieldErrorArray",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogFieldError;"
"I"
"I"
"Ljava/lang/String;"
")"
"V",
      &g_AutofillDialogGlue_addToAutofillDialogFieldErrorArray);

  env->CallStaticVoidMethod(g_AutofillDialogGlue_clazz,
      method_id, array, index, fieldType, errorText);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_createAutofillDialogMenuItemArray = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_createAutofillDialogMenuItemArray(JNIEnv* env, jint
    size) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "createAutofillDialogMenuItemArray",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogMenuItem;",
      &g_AutofillDialogGlue_createAutofillDialogMenuItemArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, size));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_addToAutofillDialogMenuItemArray = 0;
static void Java_AutofillDialogGlue_addToAutofillDialogMenuItemArray(JNIEnv*
    env, jobjectArray array,
    jint index,
    jstring line1,
    jstring line2,
    jobject icon,
    jint buttonType) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "addToAutofillDialogMenuItemArray",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogMenuItem;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Landroid/graphics/Bitmap;"
"I"
")"
"V",
      &g_AutofillDialogGlue_addToAutofillDialogMenuItemArray);

  env->CallStaticVoidMethod(g_AutofillDialogGlue_clazz,
      method_id, array, index, line1, line2, icon, buttonType);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_createAutofillDialogNotificationArray = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillDialogGlue_createAutofillDialogNotificationArray(JNIEnv* env,
    jint size) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "createAutofillDialogNotificationArray",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogNotification;",
      &g_AutofillDialogGlue_createAutofillDialogNotificationArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(g_AutofillDialogGlue_clazz,
      method_id, size));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord
    g_AutofillDialogGlue_addToAutofillDialogNotificationArray = 0;
static void Java_AutofillDialogGlue_addToAutofillDialogNotificationArray(JNIEnv*
    env, jobjectArray array,
    jint index,
    jint type,
    jint backgroundColor,
    jint textColor,
    jboolean hasArrow,
    jboolean hasCheckbox,
    jboolean isChecked,
    jboolean isInteractive,
    jstring text) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillDialogGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillDialogGlue_clazz,
      "addToAutofillDialogNotificationArray",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillDialogNotification;"
"I"
"I"
"I"
"I"
"Z"
"Z"
"Z"
"Z"
"Ljava/lang/String;"
")"
"V",
      &g_AutofillDialogGlue_addToAutofillDialogNotificationArray);

  env->CallStaticVoidMethod(g_AutofillDialogGlue_clazz,
      method_id, array, index, type, backgroundColor, textColor, hasArrow,
          hasCheckbox, isChecked, isInteractive, text);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_AutofillDialogGlue_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kAutofillDialogGlueClassPath).obj()));
  static const JNINativeMethod kMethodsAutofillDialogGlue[] = {
    { "nativeItemSelected",
"("
"I"
"I"
"I"
")"
"V", reinterpret_cast<void*>(ItemSelected) },
    { "nativeAccountSelected",
"("
"I"
"I"
")"
"V", reinterpret_cast<void*>(AccountSelected) },
    { "nativeNotificationCheckboxStateChanged",
"("
"I"
"I"
"Z"
")"
"V", reinterpret_cast<void*>(NotificationCheckboxStateChanged) },
    { "nativeContinueAutomaticSignin",
"("
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(ContinueAutomaticSignin) },
    { "nativeEditingStart",
"("
"I"
"I"
")"
"V", reinterpret_cast<void*>(EditingStart) },
    { "nativeEditingComplete",
"("
"I"
"I"
")"
"Z", reinterpret_cast<void*>(EditingComplete) },
    { "nativeEditingCancel",
"("
"I"
"I"
")"
"V", reinterpret_cast<void*>(EditingCancel) },
    { "nativeEditedOrActivatedField",
"("
"I"
"I"
"I"
"Ljava/lang/String;"
"Z"
")"
"V", reinterpret_cast<void*>(EditedOrActivatedField) },
    { "nativeValidateField",
"("
"I"
"I"
"Ljava/lang/String;"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(ValidateField) },
    { "nativeValidateSection",
"("
"I"
"I"
")"
"V", reinterpret_cast<void*>(ValidateSection) },
    { "nativeDialogSubmit",
"("
"I"
")"
"V", reinterpret_cast<void*>(DialogSubmit) },
    { "nativeDialogCancel",
"("
"I"
")"
"V", reinterpret_cast<void*>(DialogCancel) },
    { "nativeDialogDismissed",
"("
"I"
")"
"V", reinterpret_cast<void*>(DialogDismissed) },
    { "nativeGetLabelForSection",
"("
"I"
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetLabelForSection) },
    { "nativeGetListForField",
"("
"I"
"I"
")"
"[Ljava/lang/String;", reinterpret_cast<void*>(GetListForField) },
    { "nativeGetIconForField",
"("
"I"
"I"
"Ljava/lang/String;"
")"
"Landroid/graphics/Bitmap;", reinterpret_cast<void*>(GetIconForField) },
    { "nativeGetPlaceholderForField",
"("
"I"
"I"
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetPlaceholderForField) },
    { "nativeGetDialogButtonText",
"("
"I"
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetDialogButtonText) },
    { "nativeIsDialogButtonEnabled",
"("
"I"
"I"
")"
"Z", reinterpret_cast<void*>(IsDialogButtonEnabled) },
    { "nativeGetSaveLocallyText",
"("
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetSaveLocallyText) },
    { "nativeGetLegalDocumentsText",
"("
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetLegalDocumentsText) },
    { "nativeGetProgressBarText",
"("
"I"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(GetProgressBarText) },
    { "nativeIsTheAddItem",
"("
"I"
"I"
"I"
")"
"Z", reinterpret_cast<void*>(IsTheAddItem) },
  };
  const int kMethodsAutofillDialogGlueSize =
      arraysize(kMethodsAutofillDialogGlue);

  if (env->RegisterNatives(g_AutofillDialogGlue_clazz,
                           kMethodsAutofillDialogGlue,
                           kMethodsAutofillDialogGlueSize) < 0) {
    LOG(ERROR) << "RegisterNatives failed in " << __FILE__;
    return false;
  }

  return true;
}
}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_AutofillDialogGlue_JNI

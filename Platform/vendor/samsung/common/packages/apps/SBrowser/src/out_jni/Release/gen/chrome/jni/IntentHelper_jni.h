// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/IntentHelper

#ifndef org_chromium_chrome_browser_IntentHelper_JNI
#define org_chromium_chrome_browser_IntentHelper_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kIntentHelperClassPath[] =
    "org/chromium/chrome/browser/IntentHelper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_IntentHelper_clazz = NULL;
}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_IntentHelper_sendEmail = 0;
static void Java_IntentHelper_sendEmail(JNIEnv* env, jobject context,
    jstring email,
    jstring subject,
    jstring body,
    jstring chooserTitle,
    jstring fileToAttach) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_IntentHelper_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_IntentHelper_clazz,
      "sendEmail",

"("
"Landroid/content/Context;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_IntentHelper_sendEmail);

  env->CallStaticVoidMethod(g_IntentHelper_clazz,
      method_id, context, email, subject, body, chooserTitle, fileToAttach);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_IntentHelper_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kIntentHelperClassPath).obj()));
  return true;
}

#endif  // org_chromium_chrome_browser_IntentHelper_JNI

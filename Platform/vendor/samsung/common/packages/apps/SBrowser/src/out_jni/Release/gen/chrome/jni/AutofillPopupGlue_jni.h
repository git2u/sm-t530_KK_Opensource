// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/AutofillPopupGlue

#ifndef org_chromium_chrome_browser_autofill_AutofillPopupGlue_JNI
#define org_chromium_chrome_browser_autofill_AutofillPopupGlue_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kAutofillPopupGlueClassPath[] =
    "org/chromium/chrome/browser/autofill/AutofillPopupGlue";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_AutofillPopupGlue_clazz = NULL;
}  // namespace

namespace autofill {

// Step 2: method stubs.
static void RequestHide(JNIEnv* env, jobject obj,
    jint nativeAutofillPopupViewAndroid) {
  DCHECK(nativeAutofillPopupViewAndroid) << "RequestHide";
  AutofillPopupViewAndroid* native =
      reinterpret_cast<AutofillPopupViewAndroid*>(nativeAutofillPopupViewAndroid);
  return native->RequestHide(env, obj);
}

static void SuggestionSelected(JNIEnv* env, jobject obj,
    jint nativeAutofillPopupViewAndroid,
    jint listIndex) {
  DCHECK(nativeAutofillPopupViewAndroid) << "SuggestionSelected";
  AutofillPopupViewAndroid* native =
      reinterpret_cast<AutofillPopupViewAndroid*>(nativeAutofillPopupViewAndroid);
  return native->SuggestionSelected(env, obj, listIndex);
}

static void Destroy(JNIEnv* env, jobject obj,
    jint nativeAutofillPopupViewAndroid) {
  DCHECK(nativeAutofillPopupViewAndroid) << "Destroy";
  AutofillPopupViewAndroid* native =
      reinterpret_cast<AutofillPopupViewAndroid*>(nativeAutofillPopupViewAndroid);
  return native->Destroy(env, obj);
}

static base::subtle::AtomicWord g_AutofillPopupGlue_create = 0;
static ScopedJavaLocalRef<jobject> Java_AutofillPopupGlue_create(JNIEnv* env,
    jint nativeAutofillPopupViewAndroid,
    jobject windowAndroid,
    jobject viewAndroid) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillPopupGlue_clazz,
      "create",

"("
"I"
"Lorg/chromium/ui/WindowAndroid;"
"Lorg/chromium/ui/ViewAndroid;"
")"
"Lorg/chromium/chrome/browser/autofill/AutofillPopupGlue;",
      &g_AutofillPopupGlue_create);

  jobject ret =
    env->CallStaticObjectMethod(g_AutofillPopupGlue_clazz,
      method_id, nativeAutofillPopupViewAndroid, windowAndroid, viewAndroid);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AutofillPopupGlue_onNativeDestroyed = 0;
static void Java_AutofillPopupGlue_onNativeDestroyed(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillPopupGlue_clazz,
      "onNativeDestroyed",

"("
")"
"V",
      &g_AutofillPopupGlue_onNativeDestroyed);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillPopupGlue_hide = 0;
static void Java_AutofillPopupGlue_hide(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillPopupGlue_clazz,
      "hide",

"("
")"
"V",
      &g_AutofillPopupGlue_hide);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillPopupGlue_show = 0;
static void Java_AutofillPopupGlue_show(JNIEnv* env, jobject obj, jobjectArray
    suggestions) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillPopupGlue_clazz,
      "show",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillSuggestion;"
")"
"V",
      &g_AutofillPopupGlue_show);

  env->CallVoidMethod(obj,
      method_id, suggestions);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillPopupGlue_setAnchorRect = 0;
static void Java_AutofillPopupGlue_setAnchorRect(JNIEnv* env, jobject obj,
    jfloat x,
    jfloat y,
    jfloat width,
    jfloat height) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillPopupGlue_clazz,
      "setAnchorRect",

"("
"F"
"F"
"F"
"F"
")"
"V",
      &g_AutofillPopupGlue_setAnchorRect);

  env->CallVoidMethod(obj,
      method_id, x, y, width, height);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord
    g_AutofillPopupGlue_createAutofillSuggestionArray = 0;
static ScopedJavaLocalRef<jobjectArray>
    Java_AutofillPopupGlue_createAutofillSuggestionArray(JNIEnv* env, jint size)
    {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillPopupGlue_clazz,
      "createAutofillSuggestionArray",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/autofill/AutofillSuggestion;",
      &g_AutofillPopupGlue_createAutofillSuggestionArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(g_AutofillPopupGlue_clazz,
      method_id, size));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord g_AutofillPopupGlue_addToAutofillSuggestionArray
    = 0;
static void Java_AutofillPopupGlue_addToAutofillSuggestionArray(JNIEnv* env,
    jobjectArray array,
    jint index,
    jstring name,
    jstring label,
    jint uniqueId) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillPopupGlue_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillPopupGlue_clazz,
      "addToAutofillSuggestionArray",

"("
"[Lorg/chromium/chrome/browser/autofill/AutofillSuggestion;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
")"
"V",
      &g_AutofillPopupGlue_addToAutofillSuggestionArray);

  env->CallStaticVoidMethod(g_AutofillPopupGlue_clazz,
      method_id, array, index, name, label, uniqueId);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_AutofillPopupGlue_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kAutofillPopupGlueClassPath).obj()));
  static const JNINativeMethod kMethodsAutofillPopupGlue[] = {
    { "nativeRequestHide",
"("
"I"
")"
"V", reinterpret_cast<void*>(RequestHide) },
    { "nativeSuggestionSelected",
"("
"I"
"I"
")"
"V", reinterpret_cast<void*>(SuggestionSelected) },
    { "nativeDestroy",
"("
"I"
")"
"V", reinterpret_cast<void*>(Destroy) },
  };
  const int kMethodsAutofillPopupGlueSize =
      arraysize(kMethodsAutofillPopupGlue);

  if (env->RegisterNatives(g_AutofillPopupGlue_clazz,
                           kMethodsAutofillPopupGlue,
                           kMethodsAutofillPopupGlueSize) < 0) {
    LOG(ERROR) << "RegisterNatives failed in " << __FILE__;
    return false;
  }

  return true;
}
}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_AutofillPopupGlue_JNI

// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/TabBase

#ifndef org_chromium_chrome_browser_TabBase_JNI
#define org_chromium_chrome_browser_TabBase_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kTabBaseClassPath[] = "org/chromium/chrome/browser/TabBase";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_TabBase_clazz = NULL;
}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_TabBase_destroyBase = 0;
static void Java_TabBase_destroyBase(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_TabBase_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_TabBase_clazz,
      "destroyBase",

"("
")"
"V",
      &g_TabBase_destroyBase);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_TabBase_setNativePtr = 0;
static void Java_TabBase_setNativePtr(JNIEnv* env, jobject obj, jint nativePtr)
    {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_TabBase_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_TabBase_clazz,
      "setNativePtr",

"("
"I"
")"
"V",
      &g_TabBase_setNativePtr);

  env->CallVoidMethod(obj,
      method_id, nativePtr);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_TabBase_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kTabBaseClassPath).obj()));
  return true;
}

#endif  // org_chromium_chrome_browser_TabBase_JNI

// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     android/media/MediaPlayer

#ifndef android_media_MediaPlayer_JNI
#define android_media_MediaPlayer_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kMediaPlayerClassPath[] = "android/media/MediaPlayer";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_MediaPlayer_clazz = NULL;
}  // namespace

namespace JNI_MediaPlayer {

// Step 2: method stubs.

static base::subtle::AtomicWord g_MediaPlayer_setDisplay = 0;
static void Java_MediaPlayer_setDisplay(JNIEnv* env, jobject obj, jobject p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_setDisplay(JNIEnv* env, jobject obj, jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDisplay",

"("
"Landroid/view/SurfaceHolder;"
")"
"V",
      &g_MediaPlayer_setDisplay);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setSurface = 0;
static void Java_MediaPlayer_setSurface(JNIEnv* env, jobject obj, jobject p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_setSurface(JNIEnv* env, jobject obj, jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setSurface",

"("
"Landroid/view/Surface;"
")"
"V",
      &g_MediaPlayer_setSurface);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setVideoScalingMode = 0;
static void Java_MediaPlayer_setVideoScalingMode(JNIEnv* env, jobject obj, jint
    p0) __attribute__ ((unused));
static void Java_MediaPlayer_setVideoScalingMode(JNIEnv* env, jobject obj, jint
    p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setVideoScalingMode",

"("
"I"
")"
"V",
      &g_MediaPlayer_setVideoScalingMode);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_createAMMP_ACC_ANU = 0;
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_createAMMP_ACC_ANU(JNIEnv*
    env, jobject p0,
    jobject p1) __attribute__ ((unused));
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_createAMMP_ACC_ANU(JNIEnv*
    env, jobject p0,
    jobject p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_MediaPlayer_clazz,
      "create",

"("
"Landroid/content/Context;"
"Landroid/net/Uri;"
")"
"Landroid/media/MediaPlayer;",
      &g_MediaPlayer_createAMMP_ACC_ANU);

  jobject ret =
    env->CallStaticObjectMethod(g_MediaPlayer_clazz,
      method_id, p0, p1);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_MediaPlayer_createAMMP_ACC_ANU_AVSH = 0;
static ScopedJavaLocalRef<jobject>
    Java_MediaPlayer_createAMMP_ACC_ANU_AVSH(JNIEnv* env, jobject p0,
    jobject p1,
    jobject p2) __attribute__ ((unused));
static ScopedJavaLocalRef<jobject>
    Java_MediaPlayer_createAMMP_ACC_ANU_AVSH(JNIEnv* env, jobject p0,
    jobject p1,
    jobject p2) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_MediaPlayer_clazz,
      "create",

"("
"Landroid/content/Context;"
"Landroid/net/Uri;"
"Landroid/view/SurfaceHolder;"
")"
"Landroid/media/MediaPlayer;",
      &g_MediaPlayer_createAMMP_ACC_ANU_AVSH);

  jobject ret =
    env->CallStaticObjectMethod(g_MediaPlayer_clazz,
      method_id, p0, p1, p2);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_MediaPlayer_createAMMP_ACC_I = 0;
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_createAMMP_ACC_I(JNIEnv*
    env, jobject p0,
    jint p1) __attribute__ ((unused));
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_createAMMP_ACC_I(JNIEnv*
    env, jobject p0,
    jint p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_MediaPlayer_clazz,
      "create",

"("
"Landroid/content/Context;"
"I"
")"
"Landroid/media/MediaPlayer;",
      &g_MediaPlayer_createAMMP_ACC_I);

  jobject ret =
    env->CallStaticObjectMethod(g_MediaPlayer_clazz,
      method_id, p0, p1);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_MediaPlayer_setDataSourceV_ACC_ANU = 0;
static void Java_MediaPlayer_setDataSourceV_ACC_ANU(JNIEnv* env, jobject obj,
    jobject p0,
    jobject p1) __attribute__ ((unused));
static void Java_MediaPlayer_setDataSourceV_ACC_ANU(JNIEnv* env, jobject obj,
    jobject p0,
    jobject p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDataSource",

"("
"Landroid/content/Context;"
"Landroid/net/Uri;"
")"
"V",
      &g_MediaPlayer_setDataSourceV_ACC_ANU);

  env->CallVoidMethod(obj,
      method_id, p0, p1);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setDataSourceV_ACC_ANU_JUM = 0;
static void Java_MediaPlayer_setDataSourceV_ACC_ANU_JUM(JNIEnv* env, jobject
    obj, jobject p0,
    jobject p1,
    jobject p2) __attribute__ ((unused));
static void Java_MediaPlayer_setDataSourceV_ACC_ANU_JUM(JNIEnv* env, jobject
    obj, jobject p0,
    jobject p1,
    jobject p2) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDataSource",

"("
"Landroid/content/Context;"
"Landroid/net/Uri;"
"Ljava/util/Map;"
")"
"V",
      &g_MediaPlayer_setDataSourceV_ACC_ANU_JUM);

  env->CallVoidMethod(obj,
      method_id, p0, p1, p2);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setDataSourceV_JLS = 0;
static void Java_MediaPlayer_setDataSourceV_JLS(JNIEnv* env, jobject obj,
    jstring p0) __attribute__ ((unused));
static void Java_MediaPlayer_setDataSourceV_JLS(JNIEnv* env, jobject obj,
    jstring p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDataSource",

"("
"Ljava/lang/String;"
")"
"V",
      &g_MediaPlayer_setDataSourceV_JLS);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setDataSourceV_JIFD = 0;
static void Java_MediaPlayer_setDataSourceV_JIFD(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setDataSourceV_JIFD(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDataSource",

"("
"Ljava/io/FileDescriptor;"
")"
"V",
      &g_MediaPlayer_setDataSourceV_JIFD);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setDataSourceV_JIFD_J_J = 0;
static void Java_MediaPlayer_setDataSourceV_JIFD_J_J(JNIEnv* env, jobject obj,
    jobject p0,
    jlong p1,
    jlong p2) __attribute__ ((unused));
static void Java_MediaPlayer_setDataSourceV_JIFD_J_J(JNIEnv* env, jobject obj,
    jobject p0,
    jlong p1,
    jlong p2) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setDataSource",

"("
"Ljava/io/FileDescriptor;"
"J"
"J"
")"
"V",
      &g_MediaPlayer_setDataSourceV_JIFD_J_J);

  env->CallVoidMethod(obj,
      method_id, p0, p1, p2);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_prepare = 0;
static void Java_MediaPlayer_prepare(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_prepare(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "prepare",

"("
")"
"V",
      &g_MediaPlayer_prepare);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_prepareAsync = 0;
static void Java_MediaPlayer_prepareAsync(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static void Java_MediaPlayer_prepareAsync(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "prepareAsync",

"("
")"
"V",
      &g_MediaPlayer_prepareAsync);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_start = 0;
static void Java_MediaPlayer_start(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_start(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "start",

"("
")"
"V",
      &g_MediaPlayer_start);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_stop = 0;
static void Java_MediaPlayer_stop(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_stop(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "stop",

"("
")"
"V",
      &g_MediaPlayer_stop);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_pause = 0;
static void Java_MediaPlayer_pause(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_pause(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "pause",

"("
")"
"V",
      &g_MediaPlayer_pause);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setWakeMode = 0;
static void Java_MediaPlayer_setWakeMode(JNIEnv* env, jobject obj, jobject p0,
    jint p1) __attribute__ ((unused));
static void Java_MediaPlayer_setWakeMode(JNIEnv* env, jobject obj, jobject p0,
    jint p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setWakeMode",

"("
"Landroid/content/Context;"
"I"
")"
"V",
      &g_MediaPlayer_setWakeMode);

  env->CallVoidMethod(obj,
      method_id, p0, p1);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setScreenOnWhilePlaying = 0;
static void Java_MediaPlayer_setScreenOnWhilePlaying(JNIEnv* env, jobject obj,
    jboolean p0) __attribute__ ((unused));
static void Java_MediaPlayer_setScreenOnWhilePlaying(JNIEnv* env, jobject obj,
    jboolean p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setScreenOnWhilePlaying",

"("
"Z"
")"
"V",
      &g_MediaPlayer_setScreenOnWhilePlaying);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_getVideoWidth = 0;
static jint Java_MediaPlayer_getVideoWidth(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jint Java_MediaPlayer_getVideoWidth(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getVideoWidth",

"("
")"
"I",
      &g_MediaPlayer_getVideoWidth);

  jint ret =
    env->CallIntMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_getVideoHeight = 0;
static jint Java_MediaPlayer_getVideoHeight(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jint Java_MediaPlayer_getVideoHeight(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getVideoHeight",

"("
")"
"I",
      &g_MediaPlayer_getVideoHeight);

  jint ret =
    env->CallIntMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_isPlaying = 0;
static jboolean Java_MediaPlayer_isPlaying(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jboolean Java_MediaPlayer_isPlaying(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "isPlaying",

"("
")"
"Z",
      &g_MediaPlayer_isPlaying);

  jboolean ret =
    env->CallBooleanMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_seekTo = 0;
static void Java_MediaPlayer_seekTo(JNIEnv* env, jobject obj, jint p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_seekTo(JNIEnv* env, jobject obj, jint p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "seekTo",

"("
"I"
")"
"V",
      &g_MediaPlayer_seekTo);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_getCurrentPosition = 0;
static jint Java_MediaPlayer_getCurrentPosition(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jint Java_MediaPlayer_getCurrentPosition(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getCurrentPosition",

"("
")"
"I",
      &g_MediaPlayer_getCurrentPosition);

  jint ret =
    env->CallIntMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_getDuration = 0;
static jint Java_MediaPlayer_getDuration(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static jint Java_MediaPlayer_getDuration(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getDuration",

"("
")"
"I",
      &g_MediaPlayer_getDuration);

  jint ret =
    env->CallIntMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_setNextMediaPlayer = 0;
static void Java_MediaPlayer_setNextMediaPlayer(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setNextMediaPlayer(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setNextMediaPlayer",

"("
"Landroid/media/MediaPlayer;"
")"
"V",
      &g_MediaPlayer_setNextMediaPlayer);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_release = 0;
static void Java_MediaPlayer_release(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_release(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "release",

"("
")"
"V",
      &g_MediaPlayer_release);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_reset = 0;
static void Java_MediaPlayer_reset(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_reset(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "reset",

"("
")"
"V",
      &g_MediaPlayer_reset);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setAudioStreamType = 0;
static void Java_MediaPlayer_setAudioStreamType(JNIEnv* env, jobject obj, jint
    p0) __attribute__ ((unused));
static void Java_MediaPlayer_setAudioStreamType(JNIEnv* env, jobject obj, jint
    p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setAudioStreamType",

"("
"I"
")"
"V",
      &g_MediaPlayer_setAudioStreamType);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setLooping = 0;
static void Java_MediaPlayer_setLooping(JNIEnv* env, jobject obj, jboolean p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_setLooping(JNIEnv* env, jobject obj, jboolean p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setLooping",

"("
"Z"
")"
"V",
      &g_MediaPlayer_setLooping);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_isLooping = 0;
static jboolean Java_MediaPlayer_isLooping(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jboolean Java_MediaPlayer_isLooping(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "isLooping",

"("
")"
"Z",
      &g_MediaPlayer_isLooping);

  jboolean ret =
    env->CallBooleanMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_setVolume = 0;
static void Java_MediaPlayer_setVolume(JNIEnv* env, jobject obj, jfloat p0,
    jfloat p1) __attribute__ ((unused));
static void Java_MediaPlayer_setVolume(JNIEnv* env, jobject obj, jfloat p0,
    jfloat p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setVolume",

"("
"F"
"F"
")"
"V",
      &g_MediaPlayer_setVolume);

  env->CallVoidMethod(obj,
      method_id, p0, p1);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setAudioSessionId = 0;
static void Java_MediaPlayer_setAudioSessionId(JNIEnv* env, jobject obj, jint
    p0) __attribute__ ((unused));
static void Java_MediaPlayer_setAudioSessionId(JNIEnv* env, jobject obj, jint
    p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setAudioSessionId",

"("
"I"
")"
"V",
      &g_MediaPlayer_setAudioSessionId);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_getAudioSessionId = 0;
static jint Java_MediaPlayer_getAudioSessionId(JNIEnv* env, jobject obj)
    __attribute__ ((unused));
static jint Java_MediaPlayer_getAudioSessionId(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getAudioSessionId",

"("
")"
"I",
      &g_MediaPlayer_getAudioSessionId);

  jint ret =
    env->CallIntMethod(obj,
      method_id);
  base::android::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_MediaPlayer_attachAuxEffect = 0;
static void Java_MediaPlayer_attachAuxEffect(JNIEnv* env, jobject obj, jint p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_attachAuxEffect(JNIEnv* env, jobject obj, jint p0)
    {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "attachAuxEffect",

"("
"I"
")"
"V",
      &g_MediaPlayer_attachAuxEffect);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setAuxEffectSendLevel = 0;
static void Java_MediaPlayer_setAuxEffectSendLevel(JNIEnv* env, jobject obj,
    jfloat p0) __attribute__ ((unused));
static void Java_MediaPlayer_setAuxEffectSendLevel(JNIEnv* env, jobject obj,
    jfloat p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setAuxEffectSendLevel",

"("
"F"
")"
"V",
      &g_MediaPlayer_setAuxEffectSendLevel);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_getTrackInfo = 0;
static ScopedJavaLocalRef<jobjectArray> Java_MediaPlayer_getTrackInfo(JNIEnv*
    env, jobject obj) __attribute__ ((unused));
static ScopedJavaLocalRef<jobjectArray> Java_MediaPlayer_getTrackInfo(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "getTrackInfo",

"("
")"
"[Landroid/media/MediaPlayer$TrackInfo;",
      &g_MediaPlayer_getTrackInfo);

  jobjectArray ret =
    static_cast<jobjectArray>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord g_MediaPlayer_addTimedTextSourceV_JLS_JLS = 0;
static void Java_MediaPlayer_addTimedTextSourceV_JLS_JLS(JNIEnv* env, jobject
    obj, jstring p0,
    jstring p1) __attribute__ ((unused));
static void Java_MediaPlayer_addTimedTextSourceV_JLS_JLS(JNIEnv* env, jobject
    obj, jstring p0,
    jstring p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "addTimedTextSource",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_MediaPlayer_addTimedTextSourceV_JLS_JLS);

  env->CallVoidMethod(obj,
      method_id, p0, p1);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_addTimedTextSourceV_ACC_ANU_JLS =
    0;
static void Java_MediaPlayer_addTimedTextSourceV_ACC_ANU_JLS(JNIEnv* env,
    jobject obj, jobject p0,
    jobject p1,
    jstring p2) __attribute__ ((unused));
static void Java_MediaPlayer_addTimedTextSourceV_ACC_ANU_JLS(JNIEnv* env,
    jobject obj, jobject p0,
    jobject p1,
    jstring p2) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "addTimedTextSource",

"("
"Landroid/content/Context;"
"Landroid/net/Uri;"
"Ljava/lang/String;"
")"
"V",
      &g_MediaPlayer_addTimedTextSourceV_ACC_ANU_JLS);

  env->CallVoidMethod(obj,
      method_id, p0, p1, p2);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_addTimedTextSourceV_JIFD_JLS = 0;
static void Java_MediaPlayer_addTimedTextSourceV_JIFD_JLS(JNIEnv* env, jobject
    obj, jobject p0,
    jstring p1) __attribute__ ((unused));
static void Java_MediaPlayer_addTimedTextSourceV_JIFD_JLS(JNIEnv* env, jobject
    obj, jobject p0,
    jstring p1) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "addTimedTextSource",

"("
"Ljava/io/FileDescriptor;"
"Ljava/lang/String;"
")"
"V",
      &g_MediaPlayer_addTimedTextSourceV_JIFD_JLS);

  env->CallVoidMethod(obj,
      method_id, p0, p1);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_addTimedTextSourceV_JIFD_J_J_JLS =
    0;
static void Java_MediaPlayer_addTimedTextSourceV_JIFD_J_J_JLS(JNIEnv* env,
    jobject obj, jobject p0,
    jlong p1,
    jlong p2,
    jstring p3) __attribute__ ((unused));
static void Java_MediaPlayer_addTimedTextSourceV_JIFD_J_J_JLS(JNIEnv* env,
    jobject obj, jobject p0,
    jlong p1,
    jlong p2,
    jstring p3) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "addTimedTextSource",

"("
"Ljava/io/FileDescriptor;"
"J"
"J"
"Ljava/lang/String;"
")"
"V",
      &g_MediaPlayer_addTimedTextSourceV_JIFD_J_J_JLS);

  env->CallVoidMethod(obj,
      method_id, p0, p1, p2, p3);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_selectTrack = 0;
static void Java_MediaPlayer_selectTrack(JNIEnv* env, jobject obj, jint p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_selectTrack(JNIEnv* env, jobject obj, jint p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "selectTrack",

"("
"I"
")"
"V",
      &g_MediaPlayer_selectTrack);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_deselectTrack = 0;
static void Java_MediaPlayer_deselectTrack(JNIEnv* env, jobject obj, jint p0)
    __attribute__ ((unused));
static void Java_MediaPlayer_deselectTrack(JNIEnv* env, jobject obj, jint p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "deselectTrack",

"("
"I"
")"
"V",
      &g_MediaPlayer_deselectTrack);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_finalize = 0;
static void Java_MediaPlayer_finalize(JNIEnv* env, jobject obj) __attribute__
    ((unused));
static void Java_MediaPlayer_finalize(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "finalize",

"("
")"
"V",
      &g_MediaPlayer_finalize);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnPreparedListener = 0;
static void Java_MediaPlayer_setOnPreparedListener(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnPreparedListener(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnPreparedListener",

"("
"Landroid/media/MediaPlayer$OnPreparedListener;"
")"
"V",
      &g_MediaPlayer_setOnPreparedListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnCompletionListener = 0;
static void Java_MediaPlayer_setOnCompletionListener(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnCompletionListener(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnCompletionListener",

"("
"Landroid/media/MediaPlayer$OnCompletionListener;"
")"
"V",
      &g_MediaPlayer_setOnCompletionListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnBufferingUpdateListener = 0;
static void Java_MediaPlayer_setOnBufferingUpdateListener(JNIEnv* env, jobject
    obj, jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnBufferingUpdateListener(JNIEnv* env, jobject
    obj, jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnBufferingUpdateListener",

"("
"Landroid/media/MediaPlayer$OnBufferingUpdateListener;"
")"
"V",
      &g_MediaPlayer_setOnBufferingUpdateListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnSeekCompleteListener = 0;
static void Java_MediaPlayer_setOnSeekCompleteListener(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnSeekCompleteListener(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnSeekCompleteListener",

"("
"Landroid/media/MediaPlayer$OnSeekCompleteListener;"
")"
"V",
      &g_MediaPlayer_setOnSeekCompleteListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnVideoSizeChangedListener = 0;
static void Java_MediaPlayer_setOnVideoSizeChangedListener(JNIEnv* env, jobject
    obj, jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnVideoSizeChangedListener(JNIEnv* env, jobject
    obj, jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnVideoSizeChangedListener",

"("
"Landroid/media/MediaPlayer$OnVideoSizeChangedListener;"
")"
"V",
      &g_MediaPlayer_setOnVideoSizeChangedListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnTimedTextListener = 0;
static void Java_MediaPlayer_setOnTimedTextListener(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnTimedTextListener(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnTimedTextListener",

"("
"Landroid/media/MediaPlayer$OnTimedTextListener;"
")"
"V",
      &g_MediaPlayer_setOnTimedTextListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnErrorListener = 0;
static void Java_MediaPlayer_setOnErrorListener(JNIEnv* env, jobject obj,
    jobject p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnErrorListener(JNIEnv* env, jobject obj,
    jobject p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnErrorListener",

"("
"Landroid/media/MediaPlayer$OnErrorListener;"
")"
"V",
      &g_MediaPlayer_setOnErrorListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_setOnInfoListener = 0;
static void Java_MediaPlayer_setOnInfoListener(JNIEnv* env, jobject obj, jobject
    p0) __attribute__ ((unused));
static void Java_MediaPlayer_setOnInfoListener(JNIEnv* env, jobject obj, jobject
    p0) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "setOnInfoListener",

"("
"Landroid/media/MediaPlayer$OnInfoListener;"
")"
"V",
      &g_MediaPlayer_setOnInfoListener);

  env->CallVoidMethod(obj,
      method_id, p0);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_MediaPlayer_Constructor = 0;
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_Constructor(JNIEnv* env)
    __attribute__ ((unused));
static ScopedJavaLocalRef<jobject> Java_MediaPlayer_Constructor(JNIEnv* env) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_MediaPlayer_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_MediaPlayer_clazz,
      "<init>",

"("
")"
"V",
      &g_MediaPlayer_Constructor);

  jobject ret =
    env->NewObject(g_MediaPlayer_clazz,
      method_id);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_MediaPlayer_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kMediaPlayerClassPath).obj()));
  return true;
}
}  // namespace JNI_MediaPlayer

#endif  // android_media_MediaPlayer_JNI

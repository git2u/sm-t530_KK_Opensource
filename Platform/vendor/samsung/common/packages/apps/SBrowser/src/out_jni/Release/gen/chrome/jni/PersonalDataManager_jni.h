// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/PersonalDataManager

#ifndef org_chromium_chrome_browser_autofill_PersonalDataManager_JNI
#define org_chromium_chrome_browser_autofill_PersonalDataManager_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kAutofillProfileClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile";
const char kPersonalDataManagerClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager";
const char kCreditCardClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_AutofillProfile_clazz = NULL;
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_PersonalDataManager_clazz = NULL;
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_CreditCard_clazz = NULL;
}  // namespace

namespace autofill {

static jint Init(JNIEnv* env, jobject obj);

// Step 2: method stubs.
static jint GetProfileCount(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetProfileCount";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetProfileCount(env, obj);
}

static jobject GetProfileByIndex(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jint index) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetProfileByIndex";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetProfileByIndex(env, obj, index).Release();
}

static jobject GetProfileByGUID(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jstring guid) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetProfileByGUID";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetProfileByGUID(env, obj, guid).Release();
}

static jstring SetProfile(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jobject profile) {
  DCHECK(nativePersonalDataManagerAndroid) << "SetProfile";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->SetProfile(env, obj, profile).Release();
}

static jint GetCreditCardCount(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetCreditCardCount";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetCreditCardCount(env, obj);
}

static jobject GetCreditCardByIndex(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jint index) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetCreditCardByIndex";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetCreditCardByIndex(env, obj, index).Release();
}

static jobject GetCreditCardByGUID(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jstring guid) {
  DCHECK(nativePersonalDataManagerAndroid) << "GetCreditCardByGUID";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->GetCreditCardByGUID(env, obj, guid).Release();
}

static jstring SetCreditCard(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jobject card) {
  DCHECK(nativePersonalDataManagerAndroid) << "SetCreditCard";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->SetCreditCard(env, obj, card).Release();
}

static void RemoveByGUID(JNIEnv* env, jobject obj,
    jint nativePersonalDataManagerAndroid,
    jstring guid) {
  DCHECK(nativePersonalDataManagerAndroid) << "RemoveByGUID";
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  return native->RemoveByGUID(env, obj, guid);
}

static base::subtle::AtomicWord g_AutofillProfile_create = 0;
static ScopedJavaLocalRef<jobject> Java_AutofillProfile_create(JNIEnv* env,
    jstring guid,
    jstring fullName,
    jstring companyName,
    jstring addressLine1,
    jstring addressLine2,
    jstring city,
    jstring state,
    jstring zip,
    jstring country,
    jstring phoneNumber,
    jstring emailAddress) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_AutofillProfile_clazz,
      "create",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;",
      &g_AutofillProfile_create);

  jobject ret =
    env->CallStaticObjectMethod(g_AutofillProfile_clazz,
      method_id, guid, fullName, companyName, addressLine1, addressLine2, city,
          state, zip, country, phoneNumber, emailAddress);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getGUID = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getGUID(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getGUID",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getGUID);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getFullName = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getFullName(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getFullName",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getFullName);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getCompanyName = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getCompanyName(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getCompanyName",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getCompanyName);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getAddressLine1 = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getAddressLine1(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getAddressLine1",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getAddressLine1);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getAddressLine2 = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getAddressLine2(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getAddressLine2",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getAddressLine2);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getCity = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getCity(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getCity",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getCity);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getState = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getState(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getState",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getState);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getZip = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getZip(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getZip",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getZip);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getCountry = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getCountry(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getCountry",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getCountry);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getPhoneNumber = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getPhoneNumber(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getPhoneNumber",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getPhoneNumber);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getEmailAddress = 0;
static ScopedJavaLocalRef<jstring> Java_AutofillProfile_getEmailAddress(JNIEnv*
    env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_AutofillProfile_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_AutofillProfile_clazz,
      "getEmailAddress",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getEmailAddress);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_create = 0;
static ScopedJavaLocalRef<jobject> Java_CreditCard_create(JNIEnv* env, jstring
    guid,
    jstring name,
    jstring number,
    jstring obfuscatedNumber,
    jstring month,
    jstring year) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_CreditCard_clazz,
      "create",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
      &g_CreditCard_create);

  jobject ret =
    env->CallStaticObjectMethod(g_CreditCard_clazz,
      method_id, guid, name, number, obfuscatedNumber, month, year);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getGUID = 0;
static ScopedJavaLocalRef<jstring> Java_CreditCard_getGUID(JNIEnv* env, jobject
    obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_CreditCard_clazz,
      "getGUID",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getGUID);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getName = 0;
static ScopedJavaLocalRef<jstring> Java_CreditCard_getName(JNIEnv* env, jobject
    obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_CreditCard_clazz,
      "getName",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getName);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getNumber = 0;
static ScopedJavaLocalRef<jstring> Java_CreditCard_getNumber(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_CreditCard_clazz,
      "getNumber",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getNumber);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getMonth = 0;
static ScopedJavaLocalRef<jstring> Java_CreditCard_getMonth(JNIEnv* env, jobject
    obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_CreditCard_clazz,
      "getMonth",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getMonth);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getYear = 0;
static ScopedJavaLocalRef<jstring> Java_CreditCard_getYear(JNIEnv* env, jobject
    obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_CreditCard_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_CreditCard_clazz,
      "getYear",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getYear);

  jstring ret =
    static_cast<jstring>(env->CallObjectMethod(obj,
      method_id));
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_PersonalDataManager_personalDataChanged = 0;
static void Java_PersonalDataManager_personalDataChanged(JNIEnv* env, jobject
    obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_PersonalDataManager_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_PersonalDataManager_clazz,
      "personalDataChanged",

"("
")"
"V",
      &g_PersonalDataManager_personalDataChanged);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

static base::subtle::AtomicWord g_PersonalDataManager_onAutoFillDataUpdateFail =
    0;
static void Java_PersonalDataManager_onAutoFillDataUpdateFail(JNIEnv* env,
    jobject obj) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_PersonalDataManager_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, g_PersonalDataManager_clazz,
      "onAutoFillDataUpdateFail",

"("
")"
"V",
      &g_PersonalDataManager_onAutoFillDataUpdateFail);

  env->CallVoidMethod(obj,
      method_id);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_AutofillProfile_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kAutofillProfileClassPath).obj()));
  g_PersonalDataManager_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kPersonalDataManagerClassPath).obj()));
  g_CreditCard_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kCreditCardClassPath).obj()));
  static const JNINativeMethod kMethodsPersonalDataManager[] = {
    { "nativeInit",
"("
")"
"I", reinterpret_cast<void*>(Init) },
    { "nativeGetProfileCount",
"("
"I"
")"
"I", reinterpret_cast<void*>(GetProfileCount) },
    { "nativeGetProfileByIndex",
"("
"I"
"I"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;",
    reinterpret_cast<void*>(GetProfileByIndex) },
    { "nativeGetProfileByGUID",
"("
"I"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;",
    reinterpret_cast<void*>(GetProfileByGUID) },
    { "nativeSetProfile",
"("
"I"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(SetProfile) },
    { "nativeGetCreditCardCount",
"("
"I"
")"
"I", reinterpret_cast<void*>(GetCreditCardCount) },
    { "nativeGetCreditCardByIndex",
"("
"I"
"I"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
    reinterpret_cast<void*>(GetCreditCardByIndex) },
    { "nativeGetCreditCardByGUID",
"("
"I"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
    reinterpret_cast<void*>(GetCreditCardByGUID) },
    { "nativeSetCreditCard",
"("
"I"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;"
")"
"Ljava/lang/String;", reinterpret_cast<void*>(SetCreditCard) },
    { "nativeRemoveByGUID",
"("
"I"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(RemoveByGUID) },
  };
  const int kMethodsPersonalDataManagerSize =
      arraysize(kMethodsPersonalDataManager);

  if (env->RegisterNatives(g_PersonalDataManager_clazz,
                           kMethodsPersonalDataManager,
                           kMethodsPersonalDataManagerSize) < 0) {
    LOG(ERROR) << "RegisterNatives failed in " << __FILE__;
    return false;
  }

  return true;
}
}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_PersonalDataManager_JNI
